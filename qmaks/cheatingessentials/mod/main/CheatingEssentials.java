package qmaks.cheatingessentials.mod.main;

import java.lang.reflect.Method;
import java.util.Arrays;
import java.util.Iterator;

import org.lwjgl.opengl.GL11;

import net.minecraft.block.Block;
import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.GuiScreen;
import net.minecraft.client.multiplayer.WorldClient;
import net.minecraft.client.resources.SimpleReloadableResourceManager;
import net.minecraft.client.settings.KeyBinding;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.common.config.Configuration;
import qmaks.cheatingessentials.api.module.APICEMod;
import qmaks.cheatingessentials.mod.commands.APICommandManager;
import qmaks.cheatingessentials.mod.commands.CommandManager;
import qmaks.cheatingessentials.mod.external.config.forge.GeneralConfiguration;
import qmaks.cheatingessentials.mod.external.config.management.ConfigurationManager;
import qmaks.cheatingessentials.mod.gui.xraysettings.xrayBlocks;
import qmaks.cheatingessentials.mod.gui.xraysettings.xray_Gui;
import qmaks.cheatingessentials.mod.logger.CELogger;
import qmaks.cheatingessentials.mod.modulesystem.classes.XRay;
import qmaks.cheatingessentials.mod.modulesystem.handler.ModuleManagement;
import qmaks.cheatingessentials.mod.util.FontRendererUtils;
import qmaks.cheatingessentials.mod.util.Mappings;
import qmaks.cheatingessentials.mod.util.TimerUtils;
import qmaks.cheatingessentials.mod.wrapper.Events;
import qmaks.cheatingessentials.mod.wrapper.Wrapper;
import cpw.mods.fml.client.registry.ClientRegistry;
import cpw.mods.fml.common.FMLCommonHandler;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.relauncher.ReflectionHelper;
import cpw.mods.fml.relauncher.Side;

/**
 * Main Cheating Essentials class. Inits everything and sets everything up for a smooth and unbuggy usage. This class
 * is automatically detected by Forge for loading and then add it to the Mod List. 
 * This class also start and register all the vanilla commands used for debugging while CEConsole and YAWGui doesn't work
 * correctly (The first doesn't want to type and the second doesn't want to detect all the modules, lolwut)
 * @author Qmaks
 */
@Mod(modid = "Cheating Essentials", name = "Cheating Essentials", version = CheatingEssentials.version)
public class CheatingEssentials
{

	@Instance("Cheating Essentials")
	public static CheatingEssentials INSTANCE;
	public CELogger logger = new CELogger("Cheating Essentials");
	public final static String version = "8";

	@EventHandler
	public void preInit(FMLPreInitializationEvent event) {
		logger.info("Adding metadata information...");
		ModMetadata mMetadata = event.getModMetadata();
		mMetadata.url = "youtube.com/Qmaks";
		mMetadata.description = "Cheat with a plurality of different functions!\n"
				+ "\n"
				+ "VK -> vk.com/h2_eng";
		mMetadata.authorList = Arrays.asList("Qmaks", "Kodehawa", "ReesZRB");
		mMetadata.autogenerated = false;

		logger.info("Loading..."); 
		logger.info("Cheating Essentials 8 [Made by Qmaks] loading in minecraft version " + MinecraftForge.MC_VERSION + " and Minecraft Forge "+MinecraftForge.getBrandingVersion());
	}

	@EventHandler
	public void init(FMLInitializationEvent event) {
		logger.info("Loading Modules...");
		ModuleManagement.instance();
		logger.info(APICEMod.INSTANCE.mods.size() + " Modules loaded succefully!");

		FMLCommonHandler.instance().bus().register(new Events());
		MinecraftForge.EVENT_BUS.register(new Events());
		Wrapper.INSTANCE.mc().fontRenderer = new FontRendererUtils(Wrapper.INSTANCE.mc().gameSettings, new ResourceLocation("textures/font/ascii.png"), Wrapper.INSTANCE.mc().renderEngine, false);
		if (Wrapper.INSTANCE.mcSettings().language != null)
		{
			Wrapper.INSTANCE.fontRenderer().setUnicodeFlag(Wrapper.INSTANCE.mc().func_152349_b());
			Wrapper.INSTANCE.fontRenderer().setBidiFlag(Wrapper.INSTANCE.mcSettings().forceUnicodeFont);
		}
		try {
			for(Method m : SimpleReloadableResourceManager.class.getDeclaredMethods()) {
				if(m.getName().equals(Mappings.registerReloadListener)) {
					m.invoke(Wrapper.INSTANCE.mc().getResourceManager(), new Object[] {Wrapper.INSTANCE.mc().fontRenderer});
				}
			}
		} catch(Exception ex) {
			ex.printStackTrace();
		}
		ReflectionHelper.setPrivateValue(Minecraft.class, Wrapper.INSTANCE.mc(), new TimerUtils(20.0F), Mappings.timer);

		logger.info("Loading Configuration...");
		GeneralConfiguration.instance();
		ConfigurationManager.instance();
		logger.info("Configuration Loaded.");

		logger.info("Loading commands...");
		CommandManager.instance();
		APICommandManager.addCommands();
		logger.info("Commands loaded.");

		//\\ //\\ //\\ //\\ //\\ XRay //\\ //\\ //\\ //\\ //\\
		if(event.getSide() != Side.SERVER) {
			FMLCommonHandler.instance().bus().register(this);
			MinecraftForge.EVENT_BUS.register(this);
			xrayBlocks.init();
		}
	}

	@EventHandler
	public void postInit(FMLPostInitializationEvent event) {
		if(event.getSide() != Side.SERVER) {
			XRay.displayListid = GL11.glGenLists(5) + 3;
		}

		logger.info("All things loaded succefully.");
	}
}